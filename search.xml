<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[浅析微信读书和网易蜗牛读书的购书模式]]></title>
    <url>%2Fposts%2Fc98df899.html</url>
    <content type="text"><![CDATA[前言小时候家里开过几年书店，老爹特喜欢武侠，所以书店兼营武侠书出租，租书按天计费。后来我念高中，学校附近有一家大型书店，卖书基本按定价，但是看书免费，开开心心蹭了一年书以后，老板学聪明了。看书依然免费，当然，不过我发现小说、散文之类的书都不拆胶纸，期刊杂志也全搬到前台附近了。 一开始就讲这种屁故事，先别慌骂，一会儿再回头看这个故事。从传统的积累下的优秀的商业模式里面发现和学习产品策略。 正文本文讨论的是微信读书和网易蜗牛读书两款较有代表性的阅读APP的购书模式的设计策略。 简单概括 网易蜗牛读书：每天免费阅读一小时，超过时长须购买时长，日卡1元，全场免费读。 微信读书：部分书籍免费，收费书籍前面章节免费，全本须书币购书，每阅读半小时可兑换一书币，也可充值。 那么问题来了，从用户的角度出发，是买时长划算？还是买书划算？此处有一种做数学题的感觉。 理性人分析先假设用户是一个理性经济人，单纯从理性经济的角度分析。 用户分类： A用户：阅读量大，保有读书习惯，选择的书籍以网络小说为主。 B用户：阅读量大，保有读书习惯，以学习、自我提升类书籍为主，会回看（或者觉得自己会回看但机率并不高的）。 C用户：阅读量中，读书类别比较驳杂，各行均有涉猎，但很少坚持读完一本书。 D用户：阅读量不高，在某段时间觉醒要好好读书，热度难以保持，以学习、自我提升类书籍为主 E用户：阅读量低，偶尔被人推荐一本书，去看看。 决策表 注：当然我这里的用户分类全凭笔者经验手动分，实验数据必须由正规的用户研究产生。 平台方：就自己平台拥有版权的书库，分析所持有的图书类别。并做用户研究，分析用户类别、类别组成结构及用户价值。综合两者制定初步战略。 多变量分析但实际的变量肯定不会是单纯抽象的理性经济人那么简单，这些复杂的变量可能会对结果的预估产生偏差，甚至是让结果反向，所以我们有必要从更多的维度去讨论这个问题，也方便作为产品人对产品的策略的补充。 一、日卡&amp;月卡容易把用户留下。还是买断制？两者的差异，我比较一番，就价格而言，其实对于绝大多数用户来说差异不大。差异主要来源于图书的使用权的时间长短差异，前者胜在量多，但使用权时间较短（同等支出，延续使用权须续费），后者胜在使用权永久保有，但量少（同等支出，钱只够短时拥有少量书）。 日卡&amp;月卡模式可以短期内通过这种类会员形式快速培养用户习惯、并通过一些产品策略引导用户完成续费，买断制模式则让用户随着物品被拷牢在产品上，离开产品的成本 &gt;= 你抛弃你买断物品的成本。 二、日卡&amp;月卡容易促活。还是买断制？简单理解，买断，你买了书，想什么时候看就什么时候看（可能永远都不看emmmm），这里缺乏一种对读书的约束力。但是日卡&amp;月卡模式，你为今天付了钱，嗯，你不看，这钱就没了（我咋都要把我的钱看回本）他丫典型的吃自助火锅思维。从这里来看，日卡&amp;月卡模式更胜一筹。 注：微信读书做了读书时长兑换书币的补充。 三、日卡&amp;月卡模式可能会带给用户不爽，包括但不局限以下几个方面：1、图书是很收藏属性很重的物品，这里在虚拟阅读平台也得到提现，爱好藏书者一定不会喜欢日卡&amp;月卡模式的。 2、金钱 = 书籍、金钱 = 看书时间，我想前者对于目前的国民认知来说，更让人所接受 从这里看，买断制更胜一筹。 注：网易蜗牛阅读做了买断单本图书的补充。 当然还有很多，比如微信读书在社交层面的考虑，这里就不一一讨论了。在前面的讨论里，已经加入了用户和平台两个组成体。下面我想把图书的作者作为一个新的组成体，加入讨论。 作为图书作者的需求： 希望自己的出版书籍被更多人看到 希望自己能有更多的经济收益（也是出版社的需求） 注：图书版本一般是平台批量买断。（绝大数情况是出版社） 我这里假设一种新模式。买断制下，图书作者主动贡献书籍并标价，平台审核通过之后，即可在平台售卖。平台参与售卖分红，同时图书作者也可以获得盈利。（有一点“自作家”的意思，得到有点像这种模式，但不完全是）。这样做的好处，有利于扩大平台的存书量。对于此类产品来说，版权也是相当重要的一部分。 补充注：类似的问题。视频软件，对部分视频单独收费，会员免费；音乐软件，充会员还是买歌曲版权问题…….]]></content>
      <categories>
        <category>产品</category>
        <category>策略</category>
      </categories>
      <tags>
        <tag>产品</tag>
        <tag>阅读类APP</tag>
        <tag>策略</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[走近数据埋点]]></title>
    <url>%2Fposts%2F25b196e8.html</url>
    <content type="text"><![CDATA[本文对象：产品组同学、产品运营同学 为什么要做数据埋点？ 这是我夏令营的时候在团队的一页分享PPT。 当你难以判断的时候，数据或许是最真实的。 判断是主观面向客观的，人的判断 = 经验 + 思维模式，即个体思维模式作用于个体经验上的结果，经验在可以看做大脑存储的数据。数据是客观世界最真实的反映，我们可以从数据中挖掘分析出事物真实的属性，从而做出更科学的决策。 而数据埋点通常是一个与之相反的过程，从目的出发，知道自己为什么需要埋点一项数据，想要通过这项数据知道产品的运营情况，看到什么问题，对可能面对的情况能做出什么可行的调整。比如：为了评估产品改版后的效果比之前有所提升;或通过数据分析，找到产品迭代的方向等。 数据埋点埋什么？###基础名词 运营指标 PV（page view）：访问页面产生的数据。 一个用户访问了5个页面，那么就产生了5个 PV。 UV（user view）：某个特定页面的访客数。一个页面一个账号无论点进去几次，UV都是1，因为只有一个访客。 DAU(daily active user)： 日活跃用户量。 MAU(monthly active user)： 月活跃用户量。 产品指标 跳出率：页面停留访客有300人，但是有150人不喜欢这个页面，选择离开，那么跳出率就是50%（=150/300） 二跳率：首页页面停留访客有300人，有150人觉得这个网站很喜欢，于是点击浏览下一个页面，那么二跳率就是50%（=150/300）。以此类推还有三跳率，四跳率等等。 转化率：转化到最终产品目的页面的比率。比如我们前面的音乐节H5，终极目的就是为了促进其预定音乐节直播。预定量/首页UV。 访问深度：将用户在一次启动应用过程中所到达的页面累计数量视为用户的访问深度， 例如某用户从启动 APP 到退出应用过程中，一共访问了 12 个页面，那么称该用 户的访问深度为 12。理论上来讲，访问深度越高，应用质量越好，用户对应用 的依赖就越强。 这里只列举少量的，光是CNZZ提供的就很多了。具体的垂直到具体产品，有具体的埋点要求。记住埋点的核心，就是辅助决策。 下面列举几个： 内容型行业：关注PV,UV,V V，帖子数，页面停留时间，分享数等等 社交类行业：关注发帖量，发言数，PV,UV，活跃占比等等 电商类行业：关注销售收入，成单量，客单价等等 游戏类行业：关注活跃用户量，付费率，收入，ARPU（每用户平均收入）等等 用什么做数据埋点？埋点方式 自己开发。开发时加入统计代码，并搭建自己的数据查询系统。这种很麻烦，代价很大。（华中大在线就用这种方式） 集成第三方统计的SDK。 网站分析工具：CNZZ、百度统计、Google Analytics 移动应用分析工具：Google Analytics、友盟、TalkingData 冰岩一般用CNZZ，我自己的博客用的百度统计，个人感觉百度统计好用 无埋点。“无埋点”先尽可能收集所有控件的操作数据，即全埋点。 无埋点对页面所有元素进行埋点，所以这个页面每个元素被点击的概率你也就知道，对点击概率比较大的元素可以进行深入分析。 百度统计练手 常见分析法漏斗分析法用来分析从潜在用户到最终用户这个过程中用户数量的变化趋势，从而寻找到最佳的优化空间，这个方法被普遍用于产品各个关键流程的分析中。 这里以音乐节H5为例 假设我从埋点数据发现，从加载到答题页的转化特别低，那么很有可能就是我的加载页存在问题，我要再对加载做出调整。是加载时间过长，还是加载动画无聊，还是加载页广告太多….. 又假设，从分享页到预定直播转化率特别低，那么是否是我的预定button位置不对，或者文案不够吸引人。 AB测试当我不知道A方案好，还是B方案好的时候，我对于小部分用户投放两个版本，看那个版本的效果更好，这件事情在互联网界是可以被操作的。比如我们除了两套文案，但是我们不知道哪个分享好，于是把两个版本分别投向用户，数据发现，A方案转化率比B方案要高5%，那么我是否可以认定A方案要优于B方案。 AARRR模型自己去看了 做好和开发的沟通用第三方数据统计还好。如果是自己自定义代码埋点。你可能一句话的事情，但是程序员们就要很多大量的代码。而且做出来的东西是给产品和运营用的，这有时候会导致他们的抗拒心理（这个冰岩的程序小哥哥都还是很有产品感的，这个问题还好）。 产品一定要做好自己的工作，数据埋点一定要形成文档输出。越详细越好。 下面是我找的一份数据埋点的文档样例 over 参考文档：http://www.woshipm.com/data-analysis/629017.htmlhttp://www.pmcaff.com/discuss/index/676472623086656?from=search]]></content>
      <categories>
        <category>产品</category>
        <category>数据埋点</category>
      </categories>
      <tags>
        <tag>数据埋点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[七绝·夏月夜赠田郎]]></title>
    <url>%2Fposts%2Fcb13dde4.html</url>
    <content type="text"><![CDATA[余篇明月清风，逢田郎赠香炉于远途。焚香清欲，啜饮青茗。春之蕴于香涩，人生总得数味。茶以新贵，然知交以经年为稀。盖余一生之所向唯一店数人一茶一酒耳。日光西山，腐草萤火。花酒乡友，击碗长吟，不亦乐乎 十五走马弄诗成，不解离愁总销魂。老酒三杯徒添忆，新茶一盏洗风尘。 答篇]]></content>
      <categories>
        <category>诗词</category>
        <category>绝句</category>
      </categories>
      <tags>
        <tag>诗词</tag>
        <tag>有友</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信红包算法]]></title>
    <url>%2Fposts%2Fc69ce08.html</url>
    <content type="text"><![CDATA[大家疑问的三个问题每个红包能分到多少钱的期望是不是一样的？答：是，在大量相同的红包实验后，每个红包的金额趋近于（金额/红包个数）。 既然单个红包的期望是一样的，那么先抢后抢是不是没区别？答：有区别，微信采用的是一种简单拍脑袋算法，虽然先后的红包金额的期望是一样的，但是后抢红包金额的方差更大，也就是说后抢更容易拿到手气最佳，也更容易手气最背。 为什么明明抢到红包点开却发现没有？答：实时性，在2015年后，微信将红包实施了抢和拆分离，需要点两次，进入到第一个页面只代表你点第一下的当时红包还有，若是点第二次的手速慢一下，很可能会被告知红包已抢完。说一般性的结论。越晚抽越容易获得手气最佳。风险规避者更适合先抢，而风险偏爱者应该尽量往后抽，因为越往后金额标准差越大，后抽者可能抽到先抽取者不可能抽到的大红包，但抽到小红包的概率也会相应增大。 算法简析 以上是支付陈鹏先生提供的代码，仅供参考 大致可以这样理解 假设有100元钱，分给十个人。那么第一个人获得红包大小怎么计算呢？100/10 = 10元。这是期望值。从0.01到20的区间中（其中20=10乘以2）随机抽取一个数，就是第一个人获得红包的大小。假设第一个人获得了15元，那么剩下的85元平均分给9个人，这九个人平均获得红包大小为9.4元，那么第二个人的红包大小均匀分布于0.01元到18.80元的区间中，依次类推。算法保证最后一个人至少抽到0.01元。 在这里，小坊发现一个有趣的现象，即你用 N 分钱发（Ｎ－１）个红包，只有最后一个抢到０．０２元，其他人都只是０．０１元，这是知乎其他用户提供的算法所达不到的，而陈鹏先生的算法极好符合这一现象，所以也从某一层面印证了陈鹏先生提供的算法。 这种算法究竟好在哪里?以下小坊从产品和成本两个方面说一些简单的看法。 从用户的需求上讲，算法必须满足以下几个条件，多数人的红包金额要在平均数附近浮动。保证最少能0.01元，让用户不是白拆一趟。一个人拿到极小数（0.01）的概率要远大于极大数（总额９０％以上）的概率。前面的人不能一下把钱拿走很多。以上提供的拍脑袋算法，就能实现当前人至多能拿走当前平均金额的两倍，即还是拿100元分10个红包来说，第一个人至多拿走（100/10）2，假设第一个人拿走20元，那么第二个人也可以至多拿走（80/9）2元，而不会出现第一个人人品好到一下子拿走99元，剩下9人分1元的恶劣情况。相反可能出现情况前面九人每人抢到一块，最后一人躺拿91元，还可以得瑟一番，多谢大家给我留的。 从成本上看红包金额是拆的时候即时算出来的，而不是预先算好分配好，等一个个领取。预算需要空间存储每个红包的金额和顺序（当然部分网友提供的算法是先把金额算好，领取不按顺序领取，再随机领取其中一个，这样成本就更高了） 这样的拍脑袋算法，所需存储的数据也就是剩下的金额和剩下的红包数量，一条数据就够了，万一红包没有领取完，直接就可以利用这个剩下的金额返回给发红包的人，而不像预先算好一般，再将剩下的红包金额相加。]]></content>
      <categories>
        <category>产品</category>
        <category>算法</category>
      </categories>
      <tags>
        <tag>产品</tag>
        <tag>算法</tag>
        <tag>微信</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信企业号的一些思考]]></title>
    <url>%2Fposts%2F10c900a7.html</url>
    <content type="text"><![CDATA[前言有些尴尬，要为一款没有亲身体验过的产品表述自己的观点，好像本身就是一件荒谬的事。上网找了一番，有价值的信息并不多，无所知用户体验，只能从微信关于企业号的方向做一些思考了。 微信的平台战略想了一下，还是从互联网+说起，蹭余温未过。“连接一切”和“互联网+”的概念是小马哥在13年前后提出来的，其实早在QQ时代小马哥就提出“让互联网像水、电一样融入生活”。可能我在这里说QQ时代，又要被一波QQ粉怒喷，但我们不得不承认的是微信的战略，从订阅号带起来的自媒体时代，到服务号、企业号，再到最新的微信小程序。微信无不诠释了自己的平台战略。 我们都能看到互联网一步一步冲击着传统行业，这让我们看到互联网行业的活跃性，但是就是这活跃性，让处于变革焦点的互联网行业充满了巨大的不确定性。马化腾本人就是进化论和失控理论的拥簇者。用小马哥自己的一句话来说：“微信如果不是出现在腾讯，在外面任何一家公司，我们都挡不住。”看似腾讯拥有着庞大的用户群体，掌握了最好的社交平台，但是也有着巨大的担忧。这种担忧让马化腾（这里说腾讯的决策者们更好），他们试图让腾讯成为一家边界模糊的生态组织，对内和对外双重延升。微信就是这个想法的执行者（其实我个人感觉微信在这里面更应该是这个想法的提出者）。很多老外把微信理解成一个超级APP，其实我觉得微信作为一个平台来理解更为合适。 刚刚说了腾讯试图打造边界模糊的生态组织，这当中其实有很多的困难，以当年3Q大战为例，腾讯最后赢了，但是舆论倾向一致不站在腾讯一边。腾讯是典型的互联网中国模式，或者产品模仿优化模式，充分利用好自己本身的用户入口，总能取得奇效，然而此举无疑也为之四面树敌。 （说个好玩的事，腾讯现在对媒体的控制已经达到了空前的高度，比起当年，好像百度更遭重，在web时代，搜索引擎是流量入口，但是自从智能手机的崛起，移动互联网时代迅速完成反超，前面我看到一组数据表，移动互联网优势明显，而百度作为一个以搜索引擎作为主干业务的公司，在移动互联网时代显得那么无力，百度糯米、手机百度这些尝试，收效也不好，BAT之中另外两间公司，腾讯和阿里则分别拿到社交和支付这两大重要板块，以此辐射打造自己的生态圈） 回到话题，四面树敌的腾讯要想打造柔性化的竞争环境，微信企业号就是一张重要的门票。企业级市场是一个蕴含巨大机遇的市场，但也是一个吃力不讨好的事情，腾讯此前做微生活、微信会员卡等几乎所有的企业级市场均没有获得太大的成功，那为什么还如此坚定地进入这个市场?全球科技行业的发展大局趋势，我们可以得出IT巨头发展的一个共同的规律：先从消费级市场起家，等市场饱和之后，最终转型企业级市场，不转型，被收购，或者被市场淘汰! 最简单说吧，微信做的是免费的企业服务级平台，当大小公司入驻，这个平台形成一定规模，便是一张挟天子以令诸侯的令牌。 企业号的优劣势 企业号的轻量化，面对移动互联网时代，很多的公司的管理也从pc端向移动端靠拢，开发一款自己办公软件。这个带来两个问题，第一，企业的开发成本；第二，员工的使用成本。对于大多数的中小企业（不管互联网还是非互联网行业）是支付不起这样的开发成本的。前面我在做一个招新系统，光是产品形式和信息架构停停改改就做了两个星期，还未算上开发和设计成本，换算一下这些就是人民币。第二点，在移动端来说，员工为公司使用一款或者多款管理APP的成本本身就是很高的，内存空间的占用，还有打开一个APP的使用成本，这两个问题把绝大多数企业挡在了门外。企业号完美解决了中小企业的这两个问题，首先，企业号有着微信原生的开发块，同时开放第三方开发平台，这里开发的成本很低。企业号作为一个服务系统放在微信对话窗口，本身就是一个用户极好的入口，只要你打开微信，你就能看到企业号的消息推送，入口很浅，使用成本低，其实可以想你每天打开多少遍微信。另外企业号的UI设计和微信的相似度，也符合了用户的使用习惯。 数据安全性，微信的数据安全性一直做得很好，但是这只是对外的。对腾讯内部而言，我们所有通过微信产生的数据都是要经过腾讯的服务器的，对个人用户而言，这个问题无关紧要，但是对企业就不一样了，只要腾讯想，使用企业号的公司对微信而言就脱光了一样，这个对于中大型企业来说是一件多么可怕的事情。所以对于有能力开发自己软件的大公司来说，企业号也就很鸡肋了。 未成熟的企业号，写这样一个小标题，估计会被很多人嗤之以鼻。微信这么吊团队，怎么会放不成熟的产品到这么高的地位。“试错迭代策略”，与以标准化、精确化化的传统经济相比，互联网行业是对完美主义的叛逆。“小步、迭代、试错、快跑”是互联网公司取得成功的秘诀，而腾讯是其中之典范，哈哈，其实你看看微信1.0版本就知道了。所以我们不得不承认企业号不够成熟，在我问询了几个团队在腾讯的老人后，发现一个问题，腾讯自己人都不用企业号，原因么？解决不了需求，产品不够成熟，满足不了腾讯这种大公司的需求。其实这部分需求不是企业号要满足的，这里不作解释。 关于企业号应用范围的总结，综上，微信企业号的市场在中小型企业。这是他本身产品性质决定的，企业号的市场在中小企业，所以企业号的可能也将围绕中小企业进行展开。 结束 更多的想法先体验一波再说吧。两千多字存手码，到饭点了。 交流邮箱：zhr@bingyan.net]]></content>
      <categories>
        <category>产品</category>
        <category>调研</category>
      </categories>
      <tags>
        <tag>产品</tag>
        <tag>微信</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浅析网易云音乐推荐算法]]></title>
    <url>%2Fposts%2Fe39e44c.html</url>
    <content type="text"><![CDATA[前言记得在专业面的时候，问我说最喜欢的一款应用是什么？当时想都没想就回答了网易云音乐，说它的特点时候，说到了音乐评论和每日推荐的功能特色。好像是柳柳吧，问我这个推荐的算法模式是怎么样的，心慌慌的，想着以前看过的一套数据挖掘算法就急中生智糊弄过来了，核心就是基于一定数据量，以人为本的推荐，A喜欢《安河桥》《董小姐》《关于郑州的记忆》，B喜欢《安河桥》《关于郑州的记忆》，于是我们根据品味的相似性，推断B也有很大可能喜欢《董小姐》。大概就是这套算法，具体的实现好像是在《大话数据挖掘》这本书上，太久记不清了。 昨天半夜听歌听的睡不着，于是兴致突起，在网上找了很多这样的推荐算法看了一下，这里面的学问很深，虽收获颇丰却也只是了解了一隅之地。写下这篇文章，不能说写吧，更多是整理，也穿插了自己的一些想法，希望分享一下所得。 正文 看看网易云音乐的评论区你就是知道这一定是一个讲情怀的产品了，不记得在哪一首歌的评论区看过这样一句话评论网易云音乐的推荐功能——不记得从什么开始，音乐从寻找变成了等待。 最开始用过酷狗、然后转到QQ音乐，当我当我发现网易云音乐的时候便爱不释手。音质不算出众，爱的评论区和推荐功能，前者取决于产品的运营和用户的自发性，后者则是产品内部的算法强大和产品策略。 * 网易云音乐关于个性化推荐这块在公司外部介绍的比较少，但应该推荐的算法和机制和大部分的音乐素材的公司做的类似。以item为核心的协同过滤（CF），通过打分机制来推荐最适合的歌曲。* 这个是我今天的推荐，由于我平时听民谣比较多所以，推荐多以民谣为主。 我在昨晚收藏了一首火车上的熄灯曲《日冕之梦》，于是在今日的推荐歌单向我推荐了高中的熄灯曲《梦中的婚礼》还是推荐蛮准的。 算法部分：第一类，以人为本，先找到与你相似的人，然后看看他们买了什么你没有买的东西。这类算法最经典的实现就是“多维空间中两个向量夹角的余弦公式”；第二类, 以物为本直接建立各商品之间的相似度关系矩阵。这类算法中最经典是’斜率=1’ (Slope One)。amazon发明了暴力简化的第二类算法，‘买了这个商品的人，也买了xxx’。 1.相似人群的推荐 引用：著作权归作者所有。作者：邰原朗 有3首歌放在那里，《最炫民族风》，《晴天》，《Hero》。A君，收藏了《最炫民族风》，而遇到《晴天》，《Hero》则总是跳过；B君，经常单曲循环《最炫民族风》，《晴天》会播放完，《Hero》则拉黑了C君，拉黑了《最炫民族风》，而《晴天》《Hero》都收藏了。 我们都看出来了，A,B二位品味接近，C和他们很不一样。那么问题来了，说A，B相似，到底有多相似， 如何量化？ 我们把三首歌想象成三维空间的三个维度，《最炫民族风》是x轴，《晴天》是y轴，《Hero》是z轴，对每首歌的喜欢程度即该维度上的坐标，并且对喜欢程度做量化(比如： 单曲循环=5, 分享=4, 收藏=3, 主动播放=2 , 听完=1, 跳过=-1 , 拉黑=-5 )。那么每个人的总体口味就是一个向量，A君是 (3,-1,-1)，B君是(5,1,-5)，C君是(-5,3,3)。 (抱歉我不会画立体图)我们可以用向量夹角的余弦值来表示两个向量的相似程度， 0度角(表示两人完全一致)的余弦是1， 180%角(表示两人截然相反)的余弦是-1。 根据余弦公式, 夹角余弦 = 向量点积/ (向量长度的叉积) = ( x1x2 + y1y2 + z1z2) / ( 跟号(x1平方+y1平方+z1平方 ) x 跟号(x2平方+y2平方+z2平方 ) )可见 A君B君夹角的余弦是0.81 ， A君C君夹角的余弦是 -0.97 ，公式诚不欺我也。以上是三维(三首歌)的情况，如法炮制N维N首歌的情况都是一样的。假设我们选取一百首种子歌曲，算出了各君之间的相似值，那么当我们发现A君还喜欢听的《小苹果》B君居然没听过，相信大家都知道该怎么和B君推荐了吧。 第一类以人为本推荐算法的好处我想已经很清楚了，那就是精准！代价是运算量很大，而且对于新来的人(听得少，动作少)，也不太好使， 所以人们又发明了第二类算法。 假设我们对新来的D君，只知道她喜欢最炫民族风，那么问题来了，给她推荐啥好咯？ 如图，推荐《晴天》！ 还有一种算法该算法比较复杂，但是准确性很高，这里就不作具体的详细描述了，产品组有兴趣的小伙伴可以点击下面的链接到知乎查阅潜在因子（Latent Factor）算法 写在文后的话其实网易云音乐用的推荐算法不止能够用到音乐推荐上面，这套算法其实是商品推荐所用，有兴趣可以看一下，也可以挖掘一下他们的适用场景，对现有的行业现状的能做出如何的改变。]]></content>
      <categories>
        <category>产品</category>
        <category>算法</category>
      </categories>
      <tags>
        <tag>产品</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[未眠夜三更答田郎]]></title>
    <url>%2Fposts%2Fcdb40ea2.html</url>
    <content type="text"><![CDATA[##答诗 其一天涯孤灯几处摇，归雁声里忆吹箫。余州当年春风夜，茶盏新凉落棋敲。 其二莫道无别恨，田郎富诗书。惯看鸿雁去，秋风旧相熟。 ##田郎原诗时日久矣，原卷帘体诗组者四，只余其一。诗虽难寻，旧友如昔，乐。 一别永别（卷帘体诗组）月挂朱阁杏花飘，三更折柳霸陵桥。孤灯置酒余州夜，碧落三千一梦遥。 其一月挂朱阁杏花飘，拨弦回梦忆吹箫。扁舟曳曳潇湘去，自此闲棋共谁敲？]]></content>
      <categories>
        <category>诗词</category>
        <category>古风</category>
      </categories>
      <tags>
        <tag>诗词</tag>
        <tag>有友</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[祝酒歌]]></title>
    <url>%2Fposts%2Fd920fba2.html</url>
    <content type="text"><![CDATA[拼君今日酒， 聊尽此生欢。 流光东逝水， 不带青颜还。]]></content>
      <categories>
        <category>诗词</category>
        <category>古风</category>
      </categories>
      <tags>
        <tag>诗词</tag>
        <tag>离愁别绪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[临别为友人赋]]></title>
    <url>%2Fposts%2F4.8e%2B156.html</url>
    <content type="text"><![CDATA[人生飘飞絮，几回系行舟。垂柳引东路，南风穿珠楼。饮罢知三更，还来话军侯。那般明月好，偏偏照离愁。]]></content>
      <categories>
        <category>诗词</category>
        <category>古风</category>
      </categories>
      <tags>
        <tag>诗词</tag>
        <tag>有友</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[暗香]]></title>
    <url>%2Fposts%2F1d436430.html</url>
    <content type="text"><![CDATA[临江西顾，望风波不定。柳畔残香，空了繁华尽凄楚。莫笑愁丝未理，便如此，休来翻睹。乱往事，若细说来，点字句全苦。 风蹙，卷帘幕。褪去旧薄衫，满是尘土。故园酒宿，佳梦醒寻却无处。纵把眉关攒破，也无计，留风得驻。冷皓月，空照影，两行寒树。]]></content>
      <categories>
        <category>诗词</category>
        <category>词</category>
      </categories>
      <tags>
        <tag>诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[游朝天门记]]></title>
    <url>%2Fposts%2F55bf9286.html</url>
    <content type="text"><![CDATA[序癸巳季夏，余客旅渝州。曾闻渝州胜景，尤心念二江浩荡。今既来渝，当因良辰而观之。 朝天门者，两江之码头也，初为秦时建，时张仪平灭巴国，设群筑城；明初戴鼎为扩旧城，以九宫八卦之数筑城门十七。朝天门为其首，藩王吏臣朝天子使臣于此，故命之曰：“朝天”，书“古渝雄关”，后为大火所毁，门不复存，而名不弃用。——序 文余购游船之票，自上沿江路而下，道之左为石壁，荒处多生藤蔓；其右为长江，流水拍岸，浩浩汤汤。人会于道中，其间多有商贩，叫卖之声不绝。余不喜喧嚣之意，急步而行，俄而至于滩头。 余立乎滩头，翘首而望，惊乎地势之奇，憾乎气势之雄，遂叹曰：“此天地之工也，盖范公所谓波澜壮阔，浩浩汤汤，横无际涯之景，亦如是而已。”长江于此聚嘉陵江水，其声势之浩，可观之乎。二水相交，撕咬翻卷，流急涡深，状若野马奔腾，又似蛟龙相斗。其声势益浩，穿三峡，通江汉，一泻千里。其地势之要，上俯两江，下临瞿塘，背依天府，前抵潇湘，壁垒三面，襟带两江，此何不为兵家之所争乎？ 其岸两行石阶，比肩而降，直抵下水。余久行已生倦意，遂寻一石阶而坐，时江中生有薄雾，日透雾来，遍洒江波，鱼跃金鳞，帆樯林立，舟楫穿梭，往来不息。 日而西倾，及登船之时，余沿船桥而过，至于江中。方登之乎，船纵分为三。余寻天台一席而坐，盖盏茶时分，船始行。 众游者三五而分，聚桌而饮，喧声鼎沸，其所论之事，余不意闻之，何以阿堵之物负对江山胜景？时长风起而凉意生，湛湛雾云低·沙鸟困塞于长风，众皆以为江雨兮欲来，始往船中厅去，其尤坐于天台者，不过掌指之数，余亦为之叹惋。起身凭栏，极目远望，凉风引浪，波涛不兴，虹桥飞挂，两岸通明，其岸之灯火映于江者，恍然若七色天龙横卧于斯也。船行两江，自朝天门沿长江而上，复下，归入嘉陵江。时江雾益深，四野难分，觉有洪荒之意袭来，余亦心生所感，因而为之歌曰：“斯浪子兮孤立，当豪歌兮骄狂，凭栏思兮怅惘，梦魂去兮远方。魏武豪气，横槊高唱；子昂当年，幽州台上；赤壁轻舟，苏子酒狂。到而今，化江水点点，勉浪子兮惆怅，对西方人唱大江。” 船舶于岸，其身值归乎之际，然余神魂之未归。奈何余母久催之，乃记诸所感于臂掌，久盘桓而去，归既理臂掌之所记，增其理韵，得斯文。]]></content>
      <categories>
        <category>杂文</category>
        <category>游记</category>
      </categories>
      <tags>
        <tag>游记</tag>
        <tag>重庆</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[相见欢~拟征人音]]></title>
    <url>%2Fposts%2Fa6b40307.html</url>
    <content type="text"><![CDATA[相见欢流光飞泄边城，起管笙。犹忆当时明月照今人。 西风阵，别离恨，对孤灯。梦里有无君影院敲门.]]></content>
      <categories>
        <category>诗词</category>
        <category>词</category>
      </categories>
      <tags>
        <tag>诗词</tag>
      </tags>
  </entry>
</search>
